# Generated by Django 4.1.13 on 2025-06-25 12:31

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('apis_entities', '0001_initial'),
        ('apis_ontology', '0052_alter_conceptualobject_reconcile_text_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowanceType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='AssociationWithPlace',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Assoziation mit Ort',
                'verbose_name_plural': 'Assoziationen mit Ort',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='CancellationOfDebt',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Schuldenserlass',
                'verbose_name_plural': 'Schuldenserlasse',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='ChurchService',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Gottesdienst',
                'verbose_name_plural': 'Gottesdienste',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='ChurchServiceType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Gottesdiensttyp',
                'verbose_name_plural': 'Gottesdiensttypen',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Vertrag',
                'verbose_name_plural': 'Verträge',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='DayInReligiousCalendar',
            fields=[
                ('tempentityclass_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_entities.tempentityclass')),
                ('created_by', models.CharField(blank=True, db_index=True, editable=False, max_length=300)),
                ('created_when', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, db_index=True, editable=False, max_length=300)),
                ('modified_when', models.DateTimeField(auto_now=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal searchable text, for disambiguation. Store information as statements!', null=True, verbose_name='Interne Notizen')),
                ('schuh_index_id', models.CharField(blank=True, editable=False, max_length=500)),
                ('alternative_schuh_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, editable=False, max_length=500), default=list, editable=False, size=None)),
                ('reconcile_text', models.TextField(blank=True, default='', null=True)),
                ('moveable_or_immoveable_feast', models.CharField(blank=True, choices=[('moveable', 'Beweglich'), ('immoveable', 'Feste')], max_length=20, verbose_name='Art des Feiertages')),
            ],
            options={
                'verbose_name': 'Tag im Kirchenjahr',
                'verbose_name_plural': 'Tage im Kirchenjahr',
            },
            bases=('apis_entities.tempentityclass',),
        ),
        migrations.CreateModel(
            name='DayInReligiousCalendarType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Typ des Tages im religiösen Kalender',
                'verbose_name_plural': 'Typen von Tage im religiösen Kalender',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='GrantingOfDispensation',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
                ('dispensation_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Beschreibung der Dispens')),
            ],
            options={
                'verbose_name': 'Gewährung von Dispens',
                'verbose_name_plural': 'Gewährungen von Dispense',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='GrantingOfIndulgence',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
                ('description_of_indulgence', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Beschreibung des Ablasses')),
            ],
            options={
                'verbose_name': 'Gewährung von Ablass',
                'verbose_name_plural': 'Gewährungen von Ablass',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='IllnessType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Krankheitstyp',
                'verbose_name_plural': 'Krankheitstypen',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='IndividualMusicalPerformance',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Individuelle Musikaufführung',
                'verbose_name_plural': 'Individuelle Musikaufführungen',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Instrumententyp',
                'verbose_name_plural': 'Instrumententypen',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='LegitimacyOfBirth',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
                ('legitimacy', models.CharField(blank=True, choices=[('ehelichkeit', 'Ehelichkeit'), ('außerehelichkeit', 'Außerehelichkeit')], max_length=16, verbose_name='Legitimität')),
            ],
            options={
                'verbose_name': 'Legitimität der Geburt',
                'verbose_name_plural': 'Legitimitäten der Geburt',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='MusicPerformanceType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Musikaufführungstyp',
                'verbose_name_plural': 'Musikaufführungstypen',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='PersonHasIllness',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Krankheit einer Person',
                'verbose_name_plural': 'Krankheiten einer Person',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='PresentationForRole',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
                ('role_obtained', models.CharField(blank=True, choices=[('accepted', 'Akzeptiert'), ('notAccepted', 'nicht akzeptiert'), ('unknown', 'Unbekannt')], max_length=12, null=True, verbose_name='')),
            ],
            options={
                'verbose_name': 'Besetzungsvorschlag für Amt',
                'verbose_name_plural': 'Besetzungsvorschläge für Amt',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='Promise',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Versprechen',
                'verbose_name_plural': 'Versprechen',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Bitte',
                'verbose_name_plural': 'Bitten',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='ResignationFromRole',
            fields=[
                ('genericstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.genericstatement')),
            ],
            options={
                'verbose_name': 'Rücktritt von Amt',
                'verbose_name_plural': 'Rücktritte von Amt',
            },
            bases=('apis_ontology.genericstatement',),
        ),
        migrations.CreateModel(
            name='SingingType',
            fields=[
                ('typology_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.typology')),
            ],
            options={
                'verbose_name': 'Gesangstyp',
                'verbose_name_plural': 'Gesangstypen',
            },
            bases=('apis_ontology.typology',),
        ),
        migrations.CreateModel(
            name='InstrumentalPerformance',
            fields=[
                ('individualmusicalperformance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.individualmusicalperformance')),
            ],
            options={
                'verbose_name': 'Instrumentalaufführung',
                'verbose_name_plural': 'Instrumentalaufführungen',
            },
            bases=('apis_ontology.individualmusicalperformance',),
        ),
        migrations.CreateModel(
            name='SingingPerformance',
            fields=[
                ('individualmusicalperformance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_ontology.individualmusicalperformance')),
            ],
            options={
                'verbose_name': 'Gesangsaufführung',
                'verbose_name_plural': 'Gesangsaufführungen',
            },
            bases=('apis_ontology.individualmusicalperformance',),
        ),
    ]
